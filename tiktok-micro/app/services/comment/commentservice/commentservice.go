// Code generated by goctl. DO NOT EDIT.
// Source: comment.proto

package commentservice

import (
	"context"

	"tiktok-micro/app/services/comment/comment_pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Comment               = comment_pb.Comment
	CommentActionRequest  = comment_pb.CommentActionRequest
	CommentActionResponse = comment_pb.CommentActionResponse
	CommentListRequest    = comment_pb.CommentListRequest
	CommentListResponse   = comment_pb.CommentListResponse
	UserInfo              = comment_pb.UserInfo

	CommentService interface {
		CommentAction(ctx context.Context, in *CommentActionRequest, opts ...grpc.CallOption) (*CommentActionResponse, error)
		CommentList(ctx context.Context, in *CommentListRequest, opts ...grpc.CallOption) (*CommentListResponse, error)
	}

	defaultCommentService struct {
		cli zrpc.Client
	}
)

func NewCommentService(cli zrpc.Client) CommentService {
	return &defaultCommentService{
		cli: cli,
	}
}

func (m *defaultCommentService) CommentAction(ctx context.Context, in *CommentActionRequest, opts ...grpc.CallOption) (*CommentActionResponse, error) {
	client := comment_pb.NewCommentServiceClient(m.cli.Conn())
	return client.CommentAction(ctx, in, opts...)
}

func (m *defaultCommentService) CommentList(ctx context.Context, in *CommentListRequest, opts ...grpc.CallOption) (*CommentListResponse, error) {
	client := comment_pb.NewCommentServiceClient(m.cli.Conn())
	return client.CommentList(ctx, in, opts...)
}
