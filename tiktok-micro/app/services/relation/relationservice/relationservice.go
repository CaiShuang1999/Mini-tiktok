// Code generated by goctl. DO NOT EDIT.
// Source: relation.proto

package relationservice

import (
	"context"

	"tiktok-micro/app/services/relation/relation_pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetFansListRequest     = relation_pb.GetFansListRequest
	GetFansListResponse    = relation_pb.GetFansListResponse
	GetFollowListRequest   = relation_pb.GetFollowListRequest
	GetFollowListResponse  = relation_pb.GetFollowListResponse
	GetFriendListRequest   = relation_pb.GetFriendListRequest
	GetFriendListResponse  = relation_pb.GetFriendListResponse
	RelationActionRequest  = relation_pb.RelationActionRequest
	RelationActionResponse = relation_pb.RelationActionResponse
	UserInfo               = relation_pb.UserInfo

	RelationService interface {
		RelationAction(ctx context.Context, in *RelationActionRequest, opts ...grpc.CallOption) (*RelationActionResponse, error)
		GetFollowList(ctx context.Context, in *GetFollowListRequest, opts ...grpc.CallOption) (*GetFollowListResponse, error)
		GetFansList(ctx context.Context, in *GetFansListRequest, opts ...grpc.CallOption) (*GetFansListResponse, error)
		GetFriendList(ctx context.Context, in *GetFriendListRequest, opts ...grpc.CallOption) (*GetFriendListResponse, error)
	}

	defaultRelationService struct {
		cli zrpc.Client
	}
)

func NewRelationService(cli zrpc.Client) RelationService {
	return &defaultRelationService{
		cli: cli,
	}
}

func (m *defaultRelationService) RelationAction(ctx context.Context, in *RelationActionRequest, opts ...grpc.CallOption) (*RelationActionResponse, error) {
	client := relation_pb.NewRelationServiceClient(m.cli.Conn())
	return client.RelationAction(ctx, in, opts...)
}

func (m *defaultRelationService) GetFollowList(ctx context.Context, in *GetFollowListRequest, opts ...grpc.CallOption) (*GetFollowListResponse, error) {
	client := relation_pb.NewRelationServiceClient(m.cli.Conn())
	return client.GetFollowList(ctx, in, opts...)
}

func (m *defaultRelationService) GetFansList(ctx context.Context, in *GetFansListRequest, opts ...grpc.CallOption) (*GetFansListResponse, error) {
	client := relation_pb.NewRelationServiceClient(m.cli.Conn())
	return client.GetFansList(ctx, in, opts...)
}

func (m *defaultRelationService) GetFriendList(ctx context.Context, in *GetFriendListRequest, opts ...grpc.CallOption) (*GetFriendListResponse, error) {
	client := relation_pb.NewRelationServiceClient(m.cli.Conn())
	return client.GetFriendList(ctx, in, opts...)
}
