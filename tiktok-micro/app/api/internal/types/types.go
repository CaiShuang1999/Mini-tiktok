// Code generated by goctl. DO NOT EDIT.
package types

type UserInfo struct {
	ID              int64  `gorm:"primaryKey;type:mediumint unsigned" json:"id"  redis:"-"`                            // 用户id(gorm主键自增)
	Name            string `gorm:"not null;unique;size:32" json:"name" redis:"name"`                                   // 用户名称
	Password        string `gorm:"not null" json:"-" redis:"-"`                                                        //密码(返回json时，不包括密码)
	Avatar          string `gorm:"default:'/default/avatar.jpg'" json:"avatar" redis:"avatar"`                         // 用户头像
	BackgroundImage string `gorm:"default:'/default/background.jpg'" json:"background_image" redis:"background_image"` // 用户个人页顶部大图
	FavoriteCount   int64  `gorm:"type:mediumint unsigned" json:"favorite_count" redis:"favorite_count"`               // 喜欢数
	WorkCount       int64  `gorm:"type:smallint(5) unsigned" json:"work_count" redis:"work_count"`                     // 作品数
	FollowCount     int64  `gorm:"type:smallint(5) unsigned" json:"follow_count" redis:"follow_count"`                 // 关注总数
	FollowerCount   int64  `gorm:"type:mediumint unsigned" json:"follower_count" redis:"follower_count"`               // 粉丝总数
	IsFollow        bool   `gorm:"-" json:"is_follow" redis:"-"`                                                       // true-已关注，false-未关注
	Signature       string `gorm:"default:'默认个人签名!'" json:"signature,omitempty"  redis:"signature"`                    // 个人简介
	TotalFavorited  int64  `gorm:"type:mediumint unsigned" json:"total_favorited" redis:"-"`                           // 获赞数量
}

type VideoInfo struct {
	ID            int64    `json:"id"`
	Author        UserInfo `json:"author"`
	PlayURL       string   `json:"play_url"`
	CoverURL      string   `json:"cover_url"`
	FavoriteCount int64    `json:"favorite_count"`
	CommentCount  int64    `json:"comment_count"`
	IsFavorite    bool     `json:"is_favorite"`
	Title         string   `json:"title"`
}

type LoginRequest struct {
	Username string `form:"username"`
	Password string `form:"password"`
}

type LoginResponse struct {
	StatusCode int64  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
	UserId     int64  `json:"user_id"`
	Token      string `json:"token"`
}

type RegisterRequest struct {
	Username string `form:"username"`
	Password string `form:"password"`
}

type RegisterResponse struct {
	StatusCode int64  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
	UserId     int64  `json:"user_id"`
	Token      string `json:"token"`
}

type UserInfoRequest struct {
	UserId string `form:"user_id"`
	Token  string `form:"token"`
}

type UserInfoResponse struct {
	StatusCode int64    `json:"status_code"`
	StatusMsg  string   `json:"status_msg"`
	User       UserInfo `json:"user"`
}

type PublishRequest struct {
	Token string `form:"token"`
	Title string `form:"title"`
}

type PublishResponse struct {
	StatusCode int64  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
}

type PublishListRequest struct {
	UserID string `form:"user_id"`
	Token  string `form:"token,optional"`
}

type PublishListResponse struct {
	StatusCode int64        `json:"status_code"`
	StatusMsg  string       `json:"status_msg"`
	Videos     []*VideoInfo `json:"video_list"`
}

type FeedRequest struct {
	LatestTime string `form:"latest_time,optional"`
	Token      string `form:"token,optional"`
}

type FeedResponse struct {
	StatusCode int64        `json:"status_code"`
	StatusMsg  string       `json:"status_msg"`
	Videos     []*VideoInfo `json:"video_list"`
}

type FavoriteActionRequest struct {
	VideoId    string `form:"video_id"`
	Token      string `form:"token"`
	ActionType string `form:"action_type"`
}

type FavoriteActionResponse struct {
	StatusCode int64  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
}

type FavoriteListRequest struct {
	UserId string `form:"user_id"`
	Token  string `form:"token"`
}

type FavoriteListResponse struct {
	StatusCode int64        `json:"status_code"`
	StatusMsg  string       `json:"status_msg"`
	Videos     []*VideoInfo `json:"video_list"`
}

type CommentInfo struct {
	ID         int64    `json:"id"`
	User       UserInfo `json:"user"`
	Content    string   `json:"content"`
	CreateDate string   `json:"create_date"`
}

type CommentActionRequest struct {
	VideoId     string `form:"video_id"`
	Token       string `form:"token"`
	ActionType  string `form:"action_type"`
	CommentText string `form:"comment_text,optional"`
	CommentID   string `form:"comment_id,optional"`
}

type CommentActionResponse struct {
	StatusCode int64       `json:"status_code"`
	StatusMsg  string      `json:"status_msg"`
	Comment    CommentInfo `json:"comment"`
}

type CommentListRequest struct {
	VideoId string `form:"video_id"`
	Token   string `form:"token"`
}

type CommentListResponse struct {
	StatusCode int64          `json:"status_code"`
	StatusMsg  string         `json:"status_msg"`
	Comments   []*CommentInfo `json:"comment_list"`
}

type RelationActionRequest struct {
	ToUserId   string `form:"to_user_id"`
	Token      string `form:"token"`
	ActionType string `form:"action_type"`
}

type RelationActionResponse struct {
	StatusCode int64  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
}

type FollowListRequest struct {
	UserId string `form:"user_id"`
	Token  string `form:"token"`
}

type FollowListResponse struct {
	StatusCode int64       `json:"status_code"`
	StatusMsg  string      `json:"status_msg"`
	Follows    []*UserInfo `json:"user_list"`
}

type FollowerListRequest struct {
	UserId string `form:"user_id"`
	Token  string `form:"token"`
}

type FollowerListResponse struct {
	StatusCode int64       `json:"status_code"`
	StatusMsg  string      `json:"status_msg"`
	Followers  []*UserInfo `json:"user_list"`
}

type FriendListRequest struct {
	UserId string `form:"user_id"`
	Token  string `form:"token"`
}

type FriendListResponse struct {
	StatusCode int64       `json:"status_code"`
	StatusMsg  string      `json:"status_msg"`
	Friends    []*UserInfo `json:"user_list"`
}

type MessageInfo struct {
	ID         int64  `json:"id"`
	ToUserId   int64  `json:"to_user_id"`
	FromUserId int64  `json:"from_user_id"`
	Content    string `json:"content"`
	CreateTime int64  `json:"create_time"`
}

type MessageActionRequest struct {
	TOUserId   string `form:"to_user_id"`
	Token      string `form:"token"`
	ActionType string `form:"action_type"`
	Content    string `form:"content"`
}

type MessageActionResponse struct {
	StatusCode int64  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
}

type MessageListRequest struct {
	ToUserId   string `form:"to_user_id"`
	Token      string `form:"token"`
	PreMsgTime string `form:"pre_msg_time"`
}

type MessageListResponse struct {
	StatusCode  int64          `json:"status_code"`
	StatusMsg   string         `json:"status_msg"`
	MessageList []*MessageInfo `json:"message_list"`
}
