// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	comment "tiktok-micro/app/api/internal/handler/comment"
	favorite "tiktok-micro/app/api/internal/handler/favorite"
	feed "tiktok-micro/app/api/internal/handler/feed"
	message "tiktok-micro/app/api/internal/handler/message"
	relation "tiktok-micro/app/api/internal/handler/relation"
	user "tiktok-micro/app/api/internal/handler/user"
	video "tiktok-micro/app/api/internal/handler/video"
	"tiktok-micro/app/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/douyin/user/login",
				Handler: user.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/douyin/user/register",
				Handler: user.RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/douyin/user",
				Handler: user.UserInfoHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/douyin/publish/action",
				Handler: video.PublishHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/douyin/publish/list",
				Handler: video.PublishListHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/douyin/feed",
				Handler: feed.FeedHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/douyin/favorite/action",
				Handler: favorite.FavoriteActionHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/douyin/favorite/list",
				Handler: favorite.FavoriteListHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/douyin/comment/action",
				Handler: comment.CommentActionHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/douyin/comment/list",
				Handler: comment.CommentListHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/douyin/relation/action",
				Handler: relation.RelationActionHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/douyin/relation/follow/list",
				Handler: relation.FollowListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/douyin/relation/follower/list",
				Handler: relation.FollowerListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/douyin/relation/friend/list",
				Handler: relation.FriendListHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/douyin/message/action",
				Handler: message.MessageActionHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/douyin/message/chat",
				Handler: message.MessageListHandler(serverCtx),
			},
		},
	)
}
